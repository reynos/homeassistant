## lights.yaml automation

## Kitchen motion
#- alias: "Kitchen Motion ON"
#  trigger:
#    platform: state
#    entity_id: binary_sensor.kitchen_sensor_46
#    to: 'on'
## this should work to replace the motion detection logic, but will runn every single time motion is triggered 24x7
#  action:
#    service: script.turn_on
#    data_template:
#      entity_id: >
#        {% if states.input_select.house_mode.state == 'Day' and states.sensor.light_sensor_61.state > '20' and states.input_boolean.morning_lights_flag.state == 'off' %}
#          script.morning_lights_on
#        {% elif states.input_select.house_mode.state == 'Holiday' %}
#          script.alarm
#        {% endif %}

## Kitchen Morning Motion light on
- alias: "Kitchen Morning Lights sensor ON"
  trigger:
    platform: state
    entity_id: binary_sensor.kitchen_sensor
    to: 'on'
  condition:
# add or condition - if Holiday - send notify to mobile otherwise do below
    - condition: state
      entity_id: input_select.house_mode
      state: 'Day'
    - condition: state
      entity_id: input_boolean.morning_lights_flag
      state: 'off'
    - condition: numeric_state
      entity_id: sensor.kitchen_luminance
      below: 50
  action:
    - service: logbook.log
      data_template:
        name: Kitchen
        message: motion detected
        entity_id: binary_sensor.kitchen_sensor
        domain: binary_sensor
    - service: script.turn_on
      entity_id: script.morning_lights_on

## Kitchen Morning Light sensor lights off
- alias: "Morning lights sensor OFF"
  trigger:
    platform: numeric_state
    entity_id: sensor.kitchen_luminance
    above: 50
#    for:
#      minutes: 10
  action:
    - service: script.turn_on
      entity_id: script.morning_lights_off

- alias: "Morning Lights manual ON"
  trigger:
    platform: state
    entity_id: input_boolean.morning_lights
    to: 'on'
  action:
    - service: scene.turn_on
      entity_id: scene.morning

- alias: "Morning Lights manual OFF"
  trigger:
    platform: state
    entity_id: input_boolean.morning_lights
    to: 'off'
  action:
    - service: scene.turn_on
      entity_id: scene.morning_off

#- alias: Set Inside Lights at Dusk
#  trigger:
#    platform: numeric_state
#    entity_id: sensor.kitchen_luminance # this updates fom the Z-wave sensor every 5mins?
#    below: 40
#  condition:
#    condition: template
#    value_template: "{{ states.input_select.house_mode.state != 'Holiday' }}"
#  action:
#    - service: logbook.log
#      data_template:
#        name: 'Dusk:'
#        message: 'Inside lights ON'
#    - service: light.turn_on
#      entity_id: light.lounge_lamp_18
#      data:
#        state: on
#        rgb_color: [255, 64, 0]
#        brightness: 80 # brightness not working??
#    - service: switch.turn_on
#      entity_id:
#        - switch.kitchen_bench_19
#        - switch.stairs_switch

# if either in study turn on study lamp
#    - service_template: >
#        {% if states.device_tracker.reynolds_darren.state == 'study' %}
#          light.turn_on
#        {% elif states.device_tracker.reynolds_blythe.state == 'study' %}
#          light.turn_on
#        {% endif %}
#      entity_id: light.study_lamp_18

#- alias: Set Kitchen Lights at Dusk
#  trigger:
#    platform: numeric_state
#    entity_id: sensor.kitchen_luminance # this updates fom the Z-wave sensor every 5mins?
#    below: 70
#  condition:
#    condition: template
#    value_template: "{{ states.input_select.house_mode.state != 'Holiday' }}"
#  action:
#    - service: light.turn_on
#      data:
#        entity_id: light.kitchen_high_level
#        brightness_pct: 70

- alias: Bedtime switch on
  trigger:
    platform: state
    entity_id: input_boolean.bed_time
    to: 'on'
  action:
    service: input_select.select_option
    data:
      entity_id: input_select.house_mode
      option: 'Bedtime'
#    - service: script.turn_on
#      data:
#        entity_id: script.bedtime

#- alias: Arrive_home_evening
#  trigger:
#    platform: state
#    entity_id: input_boolean.darrenhome, input_boolean.blythehome
#    to: 'on'
#  condition:
#    condition: state
#    entity_id: sun.sun
#    state: 'below_horizon'
#  action:
#    - service: light.turn_on
#      entity_id:
#        switch.front_porch_switch
#    - service: script.turn_on
#      entity_id: script.timer_front_lights_off
- alias: Arrive_home_evening
  trigger:
    platform: state
    entity_id: input_boolean.darrenhome, input_boolean.blythehome
    to: 'on'
  condition:
    condition: state
    entity_id: sun.sun
    state: 'below_horizon'
  action:
    - service: light.turn_on
      entity_id:
        switch.front_porch_switch
    - service: script.turn_on
      data_template:
        entity_id: >
          {% if states.input_select.house_mode.state == 'Evening' %}
            script.timer_front_lights_off_evening
          {% elif states.input_boolean.evening_holiday.state == ON %}
            script.timer_front_lights_off_evening
          {% elif states.input_select.house_mode.state == 'Bedtime' %}
            script.timer_front_lights_off_evening
          {% elif states.input_select.house_mode.state == 'Night' %}
            script.timer_front_lights_off_night
          {% else %}
            script.timer_front_lights_off_night
          {% endif %}

- alias: Bedtime switch off # if triggered manually while the timer is running will turn the stairs light off early
  trigger:
    platform: state
    entity_id: input_boolean.bed_time
    to: 'off'
  action:
    service: light.turn_off
    entity_id: switch.stairs_switch

- alias: "Holiday Evening Light"
  trigger:
    platform: state
    entity_id: input_boolean.evening_holiday
    to: 'on'
  action:
    service: light.turn_on
    entity_id: switch.front_garden_1_switch

## Dimmers
#- alias: Kitchen High Dimmer
#  trigger:
#    platform: state
#    entity_id: input_number.kitchen_high_dimmer
#  action:
#    service: light.turn_off
#    entity_id: switch.stairs_switch

## Hall Night Motion
#- alias: "Hall motion sensor ON"
#  trigger:
#    - platform: state
#      entity_id: binary_sensor.hall_sensor_50
#      from: 'off'
#      to: 'on'
#  condition:
#    - condition: state
#      entity_id: input_select.house_mode
#      state: 'Night'
#  action:
#    - service: light.turn_on
#      entity_id: light.tv_4
#      data:
#        brightness: 30
#Turn off Hall light 2 minutes after last movement
#- alias: "Hall motion sensor OFF"
#  trigger:
#    platform: state
#    entity_id: binary_sensor.hall_sensor_50
#    to: 'off'
#    for:
#      minutes: 5
#  condition:
#    condition: state
#    entity_id: input_select.house_mode
#    state: 'Night'
#  action:
#      service: light.turn_off
#      entity_id: light.tv_4
