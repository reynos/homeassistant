### sensors.yaml

## emoncms sensors
- platform: emoncms
  id: 1
  api_key: !secret emoncms_write_key
  url: !secret emoncms_url
  scan_interval: 5
  include_only_feed_id:
    - 1
    - 6
    - 7
  unit_of_measurement: "W"
  sensor_names:
    1: "Net Grid Power"
# this value_teplate does not work and should so converted the KW in a template sensor below_horizon
#  value_template: '{{ (value | float / 1000) | round(2) }}'
- platform: emoncms
  id: 2
  api_key: !secret emoncms_write_key
  url: !secret emoncms_url
  scan_interval: 60
  include_only_feed_id:
    - 2
  unit_of_measurement: "C"
  sensor_names:
    2: "Outside Temp"
- platform: emoncms
  id: 3
  api_key: !secret emoncms_write_key
  url: !secret emoncms_url
  scan_interval: 60
  include_only_feed_id:
    - 8
    - 9
    - 10
  unit_of_measurement: "kWh"
  sensor_names:
    8: "Grid Power kWh"
    9: "Solar Production kWh"
    10: "Solar Production kWh"

## solaredge sensors
- platform: rest
  resource: !secret solaredge_resource
  value_template: '{{ (value_json.overview.lastDayData.energy | float / 1000) | round(2) }}'
  name: 'SolarEdge Today'
  unit_of_measurement: 'kWh'
  scan_interval: 900

- platform: rest
  resource: !secret solaredge_resource
  value_template: '{{ (value_json.overview.currentPower.power | float / 1000) | round(2) }}'
  name: 'SolarEdge Production'
  unit_of_measurement: 'kW'
  scan_interval: 900

- platform: version

- platform: mqtt
  name: "Darren's Mood"
  state_topic: "home/darren/mood"
  payload_on: "good"
  payload_off: "bad"
#  device_class: heat
- platform: plex
  host: !secret plexserver_ip
  username: !secret plexserver_uname
  password: !secret plexserver_pass
- platform: qnap
  host: !secret qnap_ip
  username: !secret qnap_uname
  password: !secret qnap_pass
  monitored_conditions:
    - status
    - cpu_usage
    - memory_percent_used
    - network_tx
    - volume_percentage_used

- platform: systemmonitor
  resources:
    - type: disk_free
      arg: /home
    - type: disk_use
      arg: /home
    - type: disk_use_percent
      arg: /home
    - type: processor_use
    - type: memory_free
    - type: processor_use
    - type: last_boot
    - type: since_last_boot
    - type: memory_use_percent
    - type: memory_use
    - type: memory_free
    - type: swap_use_percent
    - type: swap_use
    - type: swap_free
    - type: network_in
      arg: eno1 # not eth0
    - type: network_out
      arg: eno1

- platform: speedtest
  server_id: 2629
  monitored_conditions:
    - ping
    - download
    - upload
  minute: 30
  hour:
    - 0
    - 4
    - 8
    - 12
    - 16
    - 20

- platform: uber
  server_token: !secret uber_server_token
  start_latitude: !secret home_lat
  start_longitude: !secret home_lon
  end_latitude: !secret zone7_lat
  end_longitude: !secret zone7_lon
  product_ids:
    - '2d1d002b-d4d0-4411-98e1-673b244878b2'

#- platform: google_travel_time
#  name: GTDarren_Home
#  api_key: !secret google_maps_api_key
#  origin: device_tracker.darren
#  destination: zone.home
#  scan_interval: 600
#- platform: google_travel_time
#  name: GTBlythe_Home
#  api_key: !secret google_maps_api_key
#  origin: device_tracker.blythe
#  destination: zone.home
#  scan_interval: 600
#- platform: google_travel_time
#  name: GTHome_Work
#  api_key: !secret google_maps_api_key
#  origin: zone.home
#  destination: zone.work
#  scan_interval: 600
#- platform: google_travel_time
#  name: GTHome_City
#  api_key: !secret google_maps_api_key
#  origin: zone.home
#  destination: zone.city
#  scan_interval: 600
#- platform: google_travel_time
#  name: GTHome_Thornton
#  api_key: !secret google_maps_api_key
#  origin: zone.home
#  destination: zone.mdn
#  scan_interval: 600
#- platform: google_travel_time
#  name: GTHome_Wangi
#  api_key: !secret google_maps_api_key
#  origin: zone.home
#  destination: zone.mdr
#  scan_interval: 600
#- platform: google_travel_time
#  name: GTDom_Airport
#  api_key: !secret google_maps_api_key
#  origin: zone.home
#  destination: zone.domairport
#  scan_interval: 600
#- platform: google_travel_time
#  name: GTInt_Airport
#  api_key: !secret google_maps_api_key
#  origin: zone.home
#  destination: zone.intairport
#  scan_interval: 600

- platform: darksky
  api_key: !secret DARKSKY_API_KEY
  monitored_conditions:
    - temperature_high
    - temperature_low
    - icon
    - nearest_storm_distance
    - precip_intensity
    - precip_probability
    - temperature
    - apparent_temperature
    - wind_speed
    - wind_bearing
    - cloud_cover
    - humidity
    - pressure

- platform: filesize
  file_paths:
    - /home/homeassistant/.homeassistant/home-assistant_v2.db

- platform: scrape
  resource: https://home-assistant.io
  name: Release
  select: ".current-version h1"
  value_template: '{{ value.split(":")[1] }}'

- platform: apcupsd
  resources:
    - bcharge
    - linev
    - loadpct
    - numxfers
    - outputv
    - status
    - timeleft
    - tonbatt

# templates
- platform: template
  sensors:
    template_sensor_emoncms_net_grid_power:
      friendly_name: "Net Grid Power"
      value_template: >
        {{ (states.sensor.net_grid_power.state | float / 1000) | round(2) }}
      unit_of_measurement: "KW"
    template_sensor_emoncms_house_consumption:
      friendly_name: "House Consumption"
      value_template: >
        {{ (states.sensor.emoncms_house_consumption.state | float / 1000) | round(2) }}
      unit_of_measurement: "KW"
    template_sensor_emoncms_solar_production:
      friendly_name: "Solar Production"
      value_template: >
        {{ (states.sensor.emoncms_solar_production.state | float / 1000) | round(2) }}
      unit_of_measurement: "KW"
    template_binary_sensor_x5_xdrive30d_windows_front:
      friendly_name: "Front Windows"
      value_template: >
        {{states.binary_sensor.x5_xdrive30d_windows.attributes.windowDriverFront }}/{{ states.binary_sensor.x5_xdrive30d_windows.attributes.windowPassengerFront }}
    template_binary_sensor_x5_xdrive30d_windows_rear:
      friendly_name: "Rear Windows"
      value_template: >
        {{states.binary_sensor.x5_xdrive30d_windows.attributes.windowDriverRear }}/{{ states.binary_sensor.x5_xdrive30d_windows.attributes.windowPassengerRear }}
    template_binary_sensor_x5_xdrive30d_sunroof:
      friendly_name: "Sunroof"
      value_template: >
        {{states.binary_sensor.x5_xdrive30d_windows.attributes.sunroof }}
    template_binary_sensor_x5_xdrive30d_front_doors:
      friendly_name: "Front Doors"
      value_template: >
        {{states.binary_sensor.x5_xdrive30d_lids.attributes.doorDriverFront }}/{{ states.binary_sensor.x5_xdrive30d_lids.attributes.doorPassengerFront }}
    template_binary_sensor_x5_xdrive30d_rear_doors:
      friendly_name: "Rear Doors"
      value_template: >
        {{states.binary_sensor.x5_xdrive30d_lids.attributes.doorDriverRear }}/{{ states.binary_sensor.x5_xdrive30d_lids.attributes.doorPassengerRear }}
    template_binary_sensor_x5_xdrive30d_bonnet_rear:
      friendly_name: "Bonnet/Rear Hatch"
      value_template: >
        {{states.binary_sensor.x5_xdrive30d_lids.attributes.hood }}/{{ states.binary_sensor.x5_xdrive30d_lids.attributes.trunk }}
    template_x5_xdrive30d_remaining_fuel:
      friendly_name: "Fuel remaining"
      unit_of_measurement: "L"
      value_template: >
        {{"{:,}".format(states('sensor.x5_xdrive30d_remaining_fuel')|int)}}
    template_x5_xdrive30d_mileage:
      friendly_name: "Odometer"
      unit_of_measurement: "kms"
      value_template: >
        {{"{:,}".format(states('sensor.x5_xdrive30d_mileage')|int)}}
    template_x5_xdrive30d_remaining_range_fuel:
      friendly_name: "Fuel Range"
      unit_of_measurement: "kms"
      value_template: >
        {{"{:,}".format(states('sensor.x5_xdrive30d_remaining_range_fuel')|int)}}
    template_gtdarren_home:
      friendly_name: "Darren"
      value_template: >
        {{ states.sensor.gtdarren_home.attributes.distance }} ({{states.sensor.gtdarren_home.attributes.duration_in_traffic }})
    template_gtblythe_home:
      friendly_name: "Blythe"
      value_template: >
        {{ states.sensor.gtblythe_home.attributes.distance }} ({{states.sensor.gtblythe_home.attributes.duration_in_traffic }})
    template_nursery_air_quality:
      friendly_name: "Air Quality"
      unit_of_measurement: "State"
      value_template: "{%if states.sensor.nursery_air_quality.state == '1' %}Good{% elif states.sensor.nursery_air_quality.state == '2' %}Fair{% elif states.sensor.nursery_air_quality.state == '3' %}Poor{% elif states.sensor.nursery_air_quality.state == '4' %}Very Poor{% endif %}"
    template_calendar_family:
      value_template: >
        {{ strptime(states.calendar.family.attributes.start_time, "%Y-%m-%d %H:%M:%S").strftime("%a %I:%M%p") }}:
        {{ states.calendar.family.attributes.message }}
      friendly_name: 'Family'
      unit_of_measurement: ''
    template_calendar_bin_nights:
      unit_of_measurement: 'Wed'
      friendly_name: 'Bin night'
      value_template: >
        {{ states.calendar.bin_nights.attributes.message }}
      entity_picture_template: >
        {% if states.calendar.bin_nights.attributes.message == 'Red Yellow Bins' %}
          /local/images/ry.jpg
        {% elif states.calendar.bin_nights.attributes.message == 'Red Blue Green Bins' %}
          /local/images/rbg.jpg
        {% endif %}
    template_uberx_price:
      friendly_name: "Price estimate"
      value_template: >-
        {{ states.sensor.uberx_time.attributes["Price estimate"] }}
    template_uberx_trip_distance:
      friendly_name: "Trip distance"
      unit_of_measurement: "km"
      value_template: >-
        {{ states.sensor.uberx_time.attributes["Trip distance (in kms)"] }}
    template_uberx_pickup_time:
      friendly_name: "Pickup time estimate"
      value_template: >-
        {% set time = states.sensor.uberx_time.attributes["Pickup time estimate (in seconds)"] | int %}
        {% set minutes = (time / 60) | int%}
        {% set hours = (time / 3600) | int %}
        {% set days = (time / 86400) | int %}

        {%- if time < 60 -%}
          Less than a minute
        {%- else -%}
          {%- if days > 0 -%}
            {%- if days == 1 -%}
              1 day
            {%- else -%}
              {{ days }} days
            {%- endif -%}
          {%- endif -%}
          {%- if hours > 0 -%}
            {%- if days > 0 -%}
              {{ ', ' }}
            {%- endif -%}
            {%- if hours == 1 -%}
              1 hour
            {%- else -%}
              {{ hours }} hours
            {%- endif -%}
          {%- endif -%}
          {%- if minutes > 0 -%}
            {%- if days > 0 or hours > 0 -%}
              {{ ', ' }}
            {%- endif -%}
            {%- if minutes == 1 -%}
              1 minute
            {%- else -%}
              {{ minutes }} minutes
            {%- endif -%}
          {%- endif -%}
        {%- endif -%}
    template_uberx_trip_time:
      friendly_name: "Trip duration"
      value_template: >-
        {% set time = states.sensor.uberx_time.attributes["Trip duration (in seconds)"] | int %}
        {% set minutes = (time / 60) | int%}
        {% set hours = (time / 3600) | int %}
        {% set days = (time / 86400) | int %}

        {%- if time < 60 -%}
          Less than a minute
        {%- else -%}
          {%- if days > 0 -%}
            {%- if days == 1 -%}
              1 day
            {%- else -%}
              {{ days }} days
            {%- endif -%}
          {%- endif -%}
          {%- if hours > 0 -%}
            {%- if days > 0 -%}
              {{ ', ' }}
            {%- endif -%}
            {%- if hours == 1 -%}
              1 hour
            {%- else -%}
              {{ hours }} hours
            {%- endif -%}
          {%- endif -%}
          {%- if minutes > 0 -%}
            {%- if days > 0 or hours > 0 -%}
              {{ ', ' }}
            {%- endif -%}
            {%- if minutes == 1 -%}
              1 minute
            {%- else -%}
              {{ minutes }} minutes
            {%- endif -%}
          {%- endif -%}
        {%- endif -%}

    template_bondi_max_temp:
      friendly_name: Bondi Max
      unit_of_measurement: "°C"
      value_template: "{{ states.sensor.dark_sky_daytime_high_temperature.state|round(1) }}"
    template_bondi_min_temp:
      friendly_name: Bondi Min
      unit_of_measurement: "°C"
      value_template: "{{ states.sensor.dark_sky_overnight_low_temperature.state|round(1) }}"
    template_bondi_humidity:
      friendly_name: Bondi Humidity
      unit_of_measurement: "%"
      value_template: "{{ states.sensor.dark_sky_humidity.state|int }}"
#    template_kitchen_temp:
#      friendly_name: "Kitchen Temp"
#      unit_of_measurement: "°C"
#      value_template: "{{ states.sensor.temperature_sensor_78.state|round(1) }}"
#    template_nursery_temp:
#      friendly_name: "Nursery Temp"
#      unit_of_measurement: "°C"
#      value_template: "{{ states.sensor.nursery_temp_57.state|round(1) }}"
##      value_template: "{{ float(states.sensor.temperature_sensor_60.state) }}" does the same thing as above - default is 1 dec place
    template_gthome_thornton:
      value_template: "{{ states.sensor.gthome_thornton.attributes.duration_in_traffic }}"
      friendly_name: 'Thornton'
      unit_of_measurement: ''
    template_gthome_wangi:
      value_template: "{{ states.sensor.gthome_wangi.attributes.duration_in_traffic }}"
      friendly_name: 'Wangi Wangi'
      unit_of_measurement: ''
    template_solar_angle:
      friendly_name: "Sun Angle"
      unit_of_measurement: '°'
      value_template: "{{ '%+.1f'|format(states.sun.sun.attributes.elevation) }}"
    template_homeassistant_db:
      friendly_name: "HA database size"
      unit_of_measurement: 'MB'
      value_template: >
        {{"{:,}".format(states('sensor.homeassistant_v2db')|int)}}

# next bus times
#- platform: rest
#  resource: !secret transport_nsw_resource
#  name: "nextbus_time_1"
#  headers:
#    Accept: application/json
#    Authorization: !secret transport_nsw_api_key
#  value_template: '{{value_json.stopEvents.0.departureTimeEstimated}}'
#- platform: rest
#  resource: !secret transport_nsw_resource
#  name: "nextbus_time_2"
#  headers:
#    Accept: application/json
#    Authorization: !secret transport_nsw_api_key
#  value_template: '{{value_json.stopEvents.1.departureTimeEstimated}}'
#- platform: rest
#  resource: !secret transport_nsw_resource
#  name: "nextbus_time_3"
#  headers:
#    Accept: application/json
#    Authorization: !secret transport_nsw_api_key
#  value_template: '{{value_json.stopEvents.2.departureTimeEstimated}}'
#- platform: rest
#  resource: !secret transport_nsw_resource
#  name: "nextbus_time_4"
#  headers:
#    Accept: application/json
#    Authorization: !secret transport_nsw_api_key
#  value_template: '{{value_json.stopEvents.3.departureTimeEstimated}}'
#- platform: rest
#  resource: !secret transport_nsw_resource
#  name: "nextbus_time_5"
#  headers:
#    Accept: application/json
#    Authorization: !secret transport_nsw_api_key
#  value_template: '{{value_json.stopEvents.4.departureTimeEstimated}}'
#- platform: rest
#  resource: !secret transport_nsw_resource
#  name: "nextbus_time_6"
#  headers:
#    Accept: application/json
#    Authorization: !secret transport_nsw_api_key
#  value_template: '{{value_json.stopEvents.5.departureTimeEstimated}}'
## nest bus routes
#- platform: rest
#  resource: !secret transport_nsw_resource
#  name: "nextbus_route_1"
#  headers:
#    Accept: application/json
#    Authorization: !secret transport_nsw_api_key
#  value_template: '{{value_json.stopEvents.0.transportation.number}}'
#- platform: rest
#  resource: !secret transport_nsw_resource
#  name: "nextbus_route_2"
#  headers:
#    Accept: application/json
#    Authorization: !secret transport_nsw_api_key
#  value_template: '{{value_json.stopEvents.1.transportation.number}}'
#- platform: rest
#  resource: !secret transport_nsw_resource
#  name: "nextbus_route_3"
#  headers:
#    Accept: application/json
#    Authorization: !secret transport_nsw_api_key
#  value_template: '{{value_json.stopEvents.2.transportation.number}}'
#- platform: rest
#  resource: !secret transport_nsw_resource
#  name: "nextbus_route_4"
#  headers:
#    Accept: application/json
#    Authorization: !secret transport_nsw_api_key
#  value_template: '{{value_json.stopEvents.3.transportation.number}}'
#- platform: rest
#  resource: !secret transport_nsw_resource
#  name: "nextbus_route_5"
#  headers:
#    Accept: application/json
#    Authorization: !secret transport_nsw_api_key
#  value_template: '{{value_json.stopEvents.4.transportation.number}}'
#- platform: rest
#  resource: !secret transport_nsw_resource
#  name: "nextbus_route_6"
#  headers:
#    Accept: application/json
#    Authorization: !secret transport_nsw_api_key
#  value_template: '{{value_json.stopEvents.5.transportation.number}}'
## nest bus seats
#- platform: rest
#  resource: !secret transport_nsw_resource
#  name: "nextbus_occupancy_1"
#  headers:
#    Accept: application/json
#    Authorization: !secret transport_nsw_api_key
#  value_template: '{{value_json.stopEvents.0.location.properties.occupancy}}'
#- platform: rest
#  resource: !secret transport_nsw_resource
#  name: "nextbus_occupancy_2"
#  headers:
#    Accept: application/json
#    Authorization: !secret transport_nsw_api_key
#  value_template: '{{value_json.stopEvents.1.location.properties.occupancy}}'
#- platform: rest
#  resource: !secret transport_nsw_resource
#  name: "nextbus_occupancy_3"
#  headers:
#    Accept: application/json
#    Authorization: !secret transport_nsw_api_key
#  value_template: '{{value_json.stopEvents.2.location.properties.occupancy}}'
#- platform: rest
#  resource: !secret transport_nsw_resource
#  name: "nextbus_occupancy_4"
#  headers:
#    Accept: application/json
#    Authorization: !secret transport_nsw_api_key
#  value_template: '{{value_json.stopEvents.3.location.properties.occupancy}}'
#- platform: rest
#  resource: !secret transport_nsw_resource
#  name: "nextbus_occupancy_5"
#  headers:
#    Accept: application/json
#    Authorization: !secret transport_nsw_api_key
#  value_template: '{{value_json.stopEvents.4.location.properties.occupancy}}'
#- platform: rest
#  resource: !secret transport_nsw_resource
#  name: "nextbus_occupancy_6"
#  headers:
#    Accept: application/json
#    Authorization: !secret transport_nsw_api_key
#  value_template: '{{value_json.stopEvents.5.location.properties.occupancy}}'

## bus templates
#    template_next_bus_time_utc_1:
#      value_template: >
#        {{ as_timestamp(states.sensor.nextbus_time_1.state) | timestamp_custom("%X") }}
#    template_next_bus_time_utc_2:
#      value_template: >
#        {{ as_timestamp(states.sensor.nextbus_time_2.state) | timestamp_custom("%X") }}
#    template_next_bus_time_utc_3:
#      value_template: >
#        {{ as_timestamp(states.sensor.nextbus_time_3.state) | timestamp_custom("%X") }}
#    template_next_bus_time_utc_4:
#      value_template: >
#        {{ as_timestamp(states.sensor.nextbus_time_4.state) | timestamp_custom("%X") }}
#    template_next_bus_time_utc_5:
#      value_template: >
#        {{ as_timestamp(states.sensor.nextbus_time_5.state) | timestamp_custom("%X") }}
#    template_next_bus_time_utc_6:
#      value_template: >
#        {{ as_timestamp(states.sensor.nextbus_time_6.state) | timestamp_custom("%X") }}
#    template_next_bus_1:
#      friendly_name: "Next Bus 1"
#      value_template: >
#        {{ strptime(states.sensor.template_next_bus_time_utc_1.state, "%H:%M:%S").strftime("%I:%M%p") }}
#        - {{ states.sensor.nextbus_route_1.state }}
#        {% set min = ((as_timestamp(states.sensor.nextbus_time_1.state)-as_timestamp(now()))/60) | int %}
#        {% if min < 1 %}
#          {{ "Already_left" }}
#        {% else %}
#          {{ states.sensor.nextbus_occupancy_1.state }}
#        {% endif %}
##displays mins until bus leaves but not always acurate so can be misleading
##          ({{ min | int }} mins)
#    template_next_bus_2:
#      friendly_name: "Next Bus 2"
#      value_template: >
#        {{ strptime(states.sensor.template_next_bus_time_utc_2.state, "%H:%M:%S").strftime("%I:%M %p") }}
#        - {{ states.sensor.nextbus_route_2.state }}
#        {% set min = ((as_timestamp(states.sensor.nextbus_time_2.state)-as_timestamp(now()))/60) | int %}
#        {% if min < 1 %}
#          {{ "Already_left" }}
#        {% else %}
#          {{ states.sensor.nextbus_occupancy_2.state }}
#        {% endif %}
#      friendly_name: "Next Bus 3"
#      value_template: >
#        {{ strptime(states.sensor.template_next_bus_time_utc_3.state, "%H:%M:%S").strftime("%I:%M %p") }}
#        - {{ states.sensor.nextbus_route_3.state }}
#        {% set min = ((as_timestamp(states.sensor.nextbus_time_3.state)-as_timestamp(now()))/60) | int %}
#        {% if min < 1 %}
#          {{ "Already_left" }}
#        {% else %}
#          {{ states.sensor.nextbus_occupancy_3.state }}
#        {% endif %}
#    template_next_bus_4:
#      friendly_name: "Next Bus 4"
#      value_template: >
#        {{ strptime(states.sensor.template_next_bus_time_utc_4.state, "%H:%M:%S").strftime("%I:%M %p") }}
#        - {{ states.sensor.nextbus_route_4.state }}
#        {% set min = ((as_timestamp(states.sensor.nextbus_time_4.state)-as_timestamp(now()))/60) | int %}
#        {% if min < 1 %}
#          {{ "Already_left" }}
#        {% else %}
#          {{ states.sensor.nextbus_occupancy_4.state }}
#        {% endif %}
#    template_next_bus_5:
#      friendly_name: "Next Bus 5"
#      value_template: >
#        {{ strptime(states.sensor.template_next_bus_time_utc_5.state, "%H:%M:%S").strftime("%I:%M %p") }}
#        - {{ states.sensor.nextbus_route_5.state }}
#        {% set min = ((as_timestamp(states.sensor.nextbus_time_5.state)-as_timestamp(now()))/60) | int %}
#        {% if min < 1 %}
#          {{ "Already_left" }}
#        {% else %}
#          {{ states.sensor.nextbus_occupancy_5.state }}
#        {% endif %}
#    template_next_bus_6:
#      friendly_name: "Next Bus 6"
#      value_template: >
#        {{ strptime(states.sensor.template_next_bus_time_utc_6.state, "%H:%M:%S").strftime("%I:%M %p") }}
#        - {{ states.sensor.nextbus_route_6.state }}
#        {% set min = ((as_timestamp(states.sensor.nextbus_time_6.state)-as_timestamp(now()))/60) | int %}
#        {% if min < 1 %}
#          {{ "Already_left" }}
#        {% else %}
#          {{ states.sensor.nextbus_occupancy_6.state }}
#        {% endif %}
