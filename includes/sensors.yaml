### sensors.yaml
- platform: rest
  resource: !secret solaredge_resource
  value_template: '{{ (value_json.overview.lastDayData.energy | float / 1000) | round(2) }}'
  name: 'Solar Today'
  unit_of_measurement: 'kWh'
  scan_interval: 900

- platform: rest
  resource: !secret solaredge_resource
  value_template: '{{ (value_json.overview.currentPower.power | float / 1000) | round(2) }}'
  name: 'Solar Production'
  unit_of_measurement: 'kW'
  scan_interval: 900

- platform: version

- platform: mqtt
  name: "Darren's Mood"
  state_topic: "home/darren/mood"
  payload_on: "good"
  payload_off: "bad"
  device_class: heat
- platform: plex
  host: !secret plexserver_ip
  username: !secret plexserver_uname
  password: !secret plexserver_pass
- platform: qnap
  host: !secret qnap_ip
  username: !secret qnap_uname
  password: !secret qnap_pass
  monitored_conditions:
    - status
    - cpu_usage
    - memory_percent_used
    - network_tx
    - volume_percentage_used

- platform: systemmonitor
  resources:
    - type: disk_free
      arg: /home
    - type: disk_use
      arg: /home
    - type: disk_use_percent
      arg: /home
    - type: processor_use
    - type: memory_free
    - type: processor_use
    - type: last_boot
    - type: since_last_boot
    - type: memory_use_percent
    - type: memory_use
    - type: memory_free
    - type: swap_use_percent
    - type: swap_use
    - type: swap_free
    - type: network_in
      arg: eno1 # not eth0
    - type: network_out
      arg: eno1

- platform: speedtest
  server_id: 2629
  monitored_conditions:
    - ping
    - download
    - upload
  minute: 30
  hour:
    - 0
    - 4
    - 8
    - 12
    - 16
    - 20

- platform: uber
  server_token: !secret uber_server_token
  start_latitude: !secret home_lat
  start_longitude: !secret home_lon
  end_latitude: !secret zone7_lat
  end_longitude: !secret zone7_lon
  product_ids:
    - '2d1d002b-d4d0-4411-98e1-673b244878b2'

- platform: google_travel_time
  name: GTDarren_Home
  api_key: !secret google_maps_api_key
  origin: device_tracker.darren
  destination: zone.home
- platform: google_travel_time
  name: GTBlythe_Home
  api_key: !secret google_maps_api_key
  origin: device_tracker.blythe
  destination: zone.home
- platform: google_travel_time
  name: GTHome_Work
  api_key: !secret google_maps_api_key
  origin: zone.home
  destination: zone.work
- platform: google_travel_time
  name: GTHome_City
  api_key: !secret google_maps_api_key
  origin: zone.home
  destination: zone.city
- platform: google_travel_time
  name: GTHome_Thornton
  api_key: !secret google_maps_api_key
  origin: zone.home
  destination: zone.mdn
- platform: google_travel_time
  name: GTHome_Wangi
  api_key: !secret google_maps_api_key
  origin: zone.home
  destination: zone.mdr
- platform: google_travel_time
  name: GTDom_Airport
  api_key: !secret google_maps_api_key
  origin: zone.home
  destination: zone.domairport
- platform: google_travel_time
  name: GTInt_Airport
  api_key: !secret google_maps_api_key
  origin: zone.home
  destination: zone.intairport

- platform: filesize
  file_paths:
    - /home/homeassistant/.homeassistant/home-assistant_v2.db

- platform: scrape
  resource: https://home-assistant.io
  name: Release
  select: ".current-version h1"
  value_template: '{{ value.split(":")[1] }}'

- platform: apcupsd
  resources:
    - bcharge
    - linev
    - loadpct
    - numxfers
    - outputv
    - status
    - timeleft
    - tonbatt

# templates
- platform: template
  sensors:
    template_binary_sensor_x5_xdrive30d_windows_front:
      friendly_name: "Front Windows"
      value_template: >
        {{states.binary_sensor.x5_xdrive30d_windows.attributes.windowDriverFront }}/{{ states.binary_sensor.x5_xdrive30d_windows.attributes.windowPassengerFront }}
    template_binary_sensor_x5_xdrive30d_windows_rear:
      friendly_name: "Rear Windows"
      value_template: >
        {{states.binary_sensor.x5_xdrive30d_windows.attributes.windowDriverRear }}/{{ states.binary_sensor.x5_xdrive30d_windows.attributes.windowPassengerRear }}
    template_binary_sensor_x5_xdrive30d_sunroof:
      friendly_name: "Sunroof"
      value_template: >
        {{states.binary_sensor.x5_xdrive30d_windows.attributes.sunroof }}
    template_binary_sensor_x5_xdrive30d_front_doors:
      friendly_name: "Front Doors"
      value_template: >
        {{states.binary_sensor.x5_xdrive30d_lids.attributes.doorDriverFront }}/{{ states.binary_sensor.x5_xdrive30d_lids.attributes.doorPassengerFront }}
    template_binary_sensor_x5_xdrive30d_rear_doors:
      friendly_name: "Rear Doors"
      value_template: >
        {{states.binary_sensor.x5_xdrive30d_lids.attributes.doorDriverRear }}/{{ states.binary_sensor.x5_xdrive30d_lids.attributes.doorPassengerRear }}
    template_binary_sensor_x5_xdrive30d_bonnet_rear:
      friendly_name: "Bonnet/Rear Hatch"
      value_template: >
        {{states.binary_sensor.x5_xdrive30d_lids.attributes.hood }}/{{ states.binary_sensor.x5_xdrive30d_lids.attributes.trunk }}
    template_x5_xdrive30d_remaining_fuel:
      friendly_name: "Fuel remaining"
      unit_of_measurement: "L"
      value_template: >
        {{"{:,}".format(states('sensor.x5_xdrive30d_remaining_fuel')|int)}}
    template_x5_xdrive30d_mileage:
      friendly_name: "Odometer"
      unit_of_measurement: "kms"
      value_template: >
        {{"{:,}".format(states('sensor.x5_xdrive30d_mileage')|int)}}
    template_x5_xdrive30d_remaining_range_fuel:
      friendly_name: "Fuel Range"
      unit_of_measurement: "kms"
      value_template: >
        {{"{:,}".format(states('sensor.x5_xdrive30d_remaining_range_fuel')|int)}}
    template_gtdarren_home:
      friendly_name: "Darren"
      value_template: >
        {{ states.sensor.gtdarren_home.attributes.distance }} ({{states.sensor.gtdarren_home.attributes.duration_in_traffic }})
    template_gtblythe_home:
      friendly_name: "Blythe"
      value_template: >
        {{ states.sensor.gtblythe_home.attributes.distance }} ({{states.sensor.gtblythe_home.attributes.duration_in_traffic }})
    template_nursery_air_quality:
      friendly_name: "Air Quality"
      unit_of_measurement: "State"
      value_template: "{%if states.sensor.nursery_air_quality.state == '1' %}Good{% elif states.sensor.nursery_air_quality.state == '2' %}Fair{% elif states.sensor.nursery_air_quality.state == '3' %}Poor{% elif states.sensor.nursery_air_quality.state == '4' %}Very Poor{% endif %}"
    template_calendar_family:
      value_template: >
        {{ strptime(states.calendar.family.attributes.start_time, "%Y-%m-%d %H:%M:%S").strftime("%a %I:%M%p") }}:
        {{ states.calendar.family.attributes.message }}
      friendly_name: 'Family'
      unit_of_measurement: ''
    template_calendar_bin_nights:
      unit_of_measurement: 'Wed'
      friendly_name: 'Bin night'
      value_template: >
        {{ states.calendar.bin_nights.attributes.message }}
      entity_picture_template: >
        {% if states.calendar.bin_nights.attributes.message == 'Red Yellow Bins' %}
          /local/images/ry.jpg
        {% elif states.calendar.bin_nights.attributes.message == 'Red Blue Green Bins' %}
          /local/images/rbg.jpg
        {% endif %}
    template_uberx_price:
      friendly_name: "Price estimate"
      value_template: >-
        {{ states.sensor.uberx_time.attributes["Price estimate"] }}
    template_uberx_trip_distance:
      friendly_name: "Trip distance"
      unit_of_measurement: "km"
      value_template: >-
        {{ states.sensor.uberx_time.attributes["Trip distance (in kms)"] }}
    template_uberx_pickup_time:
      friendly_name: "Pickup time estimate"
      value_template: >-
        {% set time = states.sensor.uberx_time.attributes["Pickup time estimate (in seconds)"] | int %}
        {% set minutes = (time / 60) | int%}
        {% set hours = (time / 3600) | int %}
        {% set days = (time / 86400) | int %}

        {%- if time < 60 -%}
          Less than a minute
        {%- else -%}
          {%- if days > 0 -%}
            {%- if days == 1 -%}
              1 day
            {%- else -%}
              {{ days }} days
            {%- endif -%}
          {%- endif -%}
          {%- if hours > 0 -%}
            {%- if days > 0 -%}
              {{ ', ' }}
            {%- endif -%}
            {%- if hours == 1 -%}
              1 hour
            {%- else -%}
              {{ hours }} hours
            {%- endif -%}
          {%- endif -%}
          {%- if minutes > 0 -%}
            {%- if days > 0 or hours > 0 -%}
              {{ ', ' }}
            {%- endif -%}
            {%- if minutes == 1 -%}
              1 minute
            {%- else -%}
              {{ minutes }} minutes
            {%- endif -%}
          {%- endif -%}
        {%- endif -%}
    template_uberx_trip_time:
      friendly_name: "Trip duration"
      value_template: >-
        {% set time = states.sensor.uberx_time.attributes["Trip duration (in seconds)"] | int %}
        {% set minutes = (time / 60) | int%}
        {% set hours = (time / 3600) | int %}
        {% set days = (time / 86400) | int %}

        {%- if time < 60 -%}
          Less than a minute
        {%- else -%}
          {%- if days > 0 -%}
            {%- if days == 1 -%}
              1 day
            {%- else -%}
              {{ days }} days
            {%- endif -%}
          {%- endif -%}
          {%- if hours > 0 -%}
            {%- if days > 0 -%}
              {{ ', ' }}
            {%- endif -%}
            {%- if hours == 1 -%}
              1 hour
            {%- else -%}
              {{ hours }} hours
            {%- endif -%}
          {%- endif -%}
          {%- if minutes > 0 -%}
            {%- if days > 0 or hours > 0 -%}
              {{ ', ' }}
            {%- endif -%}
            {%- if minutes == 1 -%}
              1 minute
            {%- else -%}
              {{ minutes }} minutes
            {%- endif -%}
          {%- endif -%}
        {%- endif -%}

    template_kitchen_temp:
      friendly_name: "Kitchen Temp"
      unit_of_measurement: "C"
      value_template: "{{ states.sensor.temperature_sensor_60.state|round(1) }}"
#      value_template: "{{ float(states.sensor.temperature_sensor_60.state) }}" does the same thing as above - default is 1 dec place
    template_gthome_thornton:
      value_template: "{{ states.sensor.gthome_thornton.attributes.duration_in_traffic }}"
      friendly_name: 'Thornton'
      unit_of_measurement: ''
    template_gthome_wangi:
      value_template: "{{ states.sensor.gthome_wangi.attributes.duration_in_traffic }}"
      friendly_name: 'Wangi Wangi'
      unit_of_measurement: ''
    template_solar_angle:
      friendly_name: "Sun Angle"
      unit_of_measurement: '°'
      value_template: "{{ '%+.1f'|format(states.sun.sun.attributes.elevation) }}"
    template_homeassistant_db:
      friendly_name: "HA database size"
      unit_of_measurement: 'MB'
      value_template: >
        {{"{:,}".format(states('sensor.homeassistant_v2db')|int)}}
